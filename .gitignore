<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
=======
# Created by https://www.toptal.com/developers/gitignore/api/windows,python,django,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=windows,python,django,visualstudiocode

### Django ###
*.log
*.pot
*.pyc
__pycache__/
migrations
local_settings.py
db.sqlite3
db.sqlite3-journal
media
image
meetapp/image

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
<<<<<<< HEAD
lib/
lib64/
=======
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
=======
pip-wheel-metadata/
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
<<<<<<< HEAD
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
=======
pytestdebug.log

# Translations
*.mo

# Django stuff:
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
<<<<<<< HEAD

# PyBuilder
.pybuilder/
=======
doc/_build/

# PyBuilder
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
<<<<<<< HEAD
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version
=======
.python-version
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

<<<<<<< HEAD
=======
# poetry
#poetry.lock

>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
<<<<<<< HEAD
.env
.venv
=======
# .env
.env/
.venv/
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
env/
venv/
ENV/
env.bak/
venv.bak/
<<<<<<< HEAD
=======
pythonenv*
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

<<<<<<< HEAD
# Cython debug symbols
cython_debug/

uploads/
=======
# operating system-related files
# file properties cache/storage on macOS
*.DS_Store
# thumbnail cache on Windows
Thumbs.db

# profiling data
.prof


### Python ###
# Byte-compiled / optimized / DLL files

# C extensions

# Distribution / packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.

# Installer logs

# Unit test / coverage reports

# Translations

# Django stuff:

# Flask stuff:

# Scrapy stuff:

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# poetry

# PEP 582; used by e.g. github.com/David-OConnor/pyflow

# Celery stuff

# SageMath parsed files

# Environments
# .env

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

# operating system-related files
# file properties cache/storage on macOS
# thumbnail cache on Windows

# profiling data


### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### Windows ###
# Windows thumbnail cache files
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# End of https://www.toptal.com/developers/gitignore/api/windows,python,django,visualstudiocode 
>>>>>>> 1a68f7a46bb339d887c7f6a95dd957e861857958
